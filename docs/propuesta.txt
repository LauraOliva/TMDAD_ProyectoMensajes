AUTORA: Laura Oliva Maza
NIP: 702756
FECHA: 08/03/2019
--------------------------------------------------------------------------------
APLICACIÓN DE CHAT
--------------------------------------------------------------------------------
HISTORIAS DE USUARIO A DESARROLLAR
--------------------------------------------------------------------------------
1 - Como usuario quiero poder enviar mensajes a otros usuarios para tener conversaciones
	puntuales:
		* Cada mensaje de texto plano y puede tener hasta 500 caracteres
		* Mensajes "punto a punto" simplemente sabiendo el nombre de los usuarios
		  a los que van dirigidos
		* Si un usuario no está online cuando se le envía un mensaje, se le notifica
		  cuando se conecte
		* Poder intercambiar mensajes simultáneamente con al menos 5 usuarios (tanto
		  si están como si no están conectados al mismo tiempo).
		* Los mensajes llegan a todos los participantes en “push” (p.ej. sin tener 
		  que refrescar la aplicación).
		* Ningún mensaje tarda más de 60s en llegar a todos los destinatarios 
		  (siempre que estén online en el momento en que el mensaje se envió)
		  
2 - Como usuaria quiero poder compartir ficheros de mi equipo con otros usuarios 
	para complementar las conversaciones con información adicional:
		* Los ficheros intercambiados pueden ser de cualquier tipo y pesar hasta 
		  1 MB
		* Por lo demás, y para todo lo que tenga sentido, los mensajes de tipo 
		  fichero enviado tienen los mismos criterios de aceptación que los 
		  mensajes básicos de texto (historia 1).

3 - Como usuario quiero poder crear salas de chat permanentes para tener un registro
	de las conversaciones pasadas:
		* El creador de la sala tiene permiso de administración sobre la misma: 
		  es el único que puede invitar/desinvitar a usuarios y borrar la sala 
		  cuando quiera.
		* Solo los usuarios invitados por el creador de la sala pueden acceder.
		* Salas identificadas y accesibles con una URL única.
		* Todos los mensajes enviados a través de la sala quedan registrados en 
		  el sistema hasta que se decida borrar esta sala.
		* En un chat permanente se pueden intercambiar los mismos tipos de mensajes 
		  que de manera puntual (p.ej. Historias 1 y 2).

5 - Como superusuario quiero poder enviar mensajes a todos los usuarios suscritos
	para anuncios de interés y publicidad de nuevas características del sistema:
		* Solo mensajes de texto

--------------------------------------------------------------------------------
SISTEMA
--------------------------------------------------------------------------------
Características del sistema:
	- Implementa adecuadamente las historias de usuario descritas
	- Soporta correctamente a varios usuarios simultáneos
	- Se despliega y ejecuta en al menos tres máquinas virtuales de las cuales al 
	  menos una debe estar en un proveedor cloud

--------------------------------------------------------------------------------
TIPO DE DATOS
--------------------------------------------------------------------------------
Como se puede ver en la descripción de las historias de usuario, existen diferentes
tipos tanto de usuario como de mensaje.

TIPOS DE MENSAJE:
	- Mensaje de texto: mensaje de texto plano que puede tener como máximo 500 
	  caracteres.
	- Fichero: el fichero será tranformado a bytes y seran estos los que se almacenen
	  en la BBDD. Si un fichero es demasiado grande se preguntará al usuario 
	  que lo reciba si desea descargarlo o no. Si el usuario acepta se le enviará
	  el fichero por partes
	- ACK: para confirmar que un mensaje ha llegado a su destino
	
TIPOS DE USUARIO:
	- Usuario
	- Superusuario: actúa como un usuario normal y además puede enviar un mensaje
	  a todos los usuarios
	  
--------------------------------------------------------------------------------
TECNOLOGÍAS
--------------------------------------------------------------------------------
Se van a utilizar las tecnologías recomendadas en clase:
	- Lenguaje: Java 8
	- Herramienta de construcción: Gradle
	- Framework: Spring Boot

Además se va a utilizar:
	- BBDD: MySQL

--------------------------------------------------------------------------------
ESTRUCTURA DEL SISTEMA
--------------------------------------------------------------------------------
Este sistema constará de 3 máquinas virtuales:
	- Máquina 1: Aplicación cliente (Java)
	- Máquina 2: Aplicación servidor (Java, Spring Boot)
	- Máquina 3: Base de datos (MySQL)
	
Las máquinas se comunicarán de la siguiente forma:	
	Máquina 1 <--HTTP--> Máquina 2 <--QUERY--> Máquina 3
	
APLICACIÓN CLIENTE:
Esta aplicación será la que implemente la aplicación chat y enviará peticiones
HTTP al servidor para obtener los datos que necesite o para enviar mensajes.

Tipos de peticiones que el cliente puede hacer al servidor:
	- GET: obtener datos
		* Datos de un usuario
		* Datos sobre una sala
		* Usuarios de una sala
		* Mensajes intercambiados con un usuario
		* Mensajes intercambiados con una sala
	
	- POST: actualizar informacion o insertar nuevos mensajes
		* Enviar un mensaje a un usuario
		* Enviar un mensaje a una sala
		* Añadir un usuario a una sala (solo el adminitrador de la sala)
		* Enviar un mensaje a todos los usuarios (Solo el superusuario)
	
	- DELETE:
		* Eliminar una sala (solo el adminitrador de la sala)
		* Eliminar un usuario de una sala (solo el adminitrador de la sala)

APLICACIÓN SERVIDOR:
Esta aplicación comunicará el cliente con la base de datos. Recibirá peticiones
(GET, POST, UPDATE, DELETE...) del cliente, hará las queries necesarias en la 
BBDD y enviará la respuesta al cliente. Esta aplicación se encontrara en el cloud.

Tipos de queries que el servidor puede hacer a la BBDD:
	- INSERT:
		* Nuevo usuario
		* Nueva sala
	
	- UPDATE:
		* Acualizar conversaciones en una sala o conversación entre 2 usuario
	
	- SELECT:
		* Obtener los mensajes
	
	- DELETE:
		* Eliminar usuario de una sala
		* Eliminar salas
	
BBDD:
Base de Datos MySQL en la que se almacenará información relativa a los usuarios 
y a los mensajes y sus relaciones (el usuario A de tipo U1 a enviado el mensaje 
X de tipo F al usuario B de tipo U2). 
